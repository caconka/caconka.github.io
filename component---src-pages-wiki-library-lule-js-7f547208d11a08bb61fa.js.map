{"version":3,"sources":["webpack:///./src/components/book.js","webpack:///./src/components/books.js","webpack:///./src/components/library.js","webpack:///./src/pages/wiki/library/lule.js"],"names":["Book","book","key","title","className","to","link","itemProp","src","image","alt","author","name","readings","map","r","end_date","start_date","Books","readed","reading","length","b","FILTER","filterBooks","books","filters","filter","k","Date","getFullYear","includes","Library","location","library","readingBooks","readedBooks","sortedBooks","sort","a","forEach","push","lastReading","lastYear","now","selectYears","Array","from","_","i","y","value","label","useState","updateBooks","year","selectYear","onChange","options","theme","borderRadius","colors","primary25","primary","LibraryCharlie"],"mappings":"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","file":"component---src-pages-wiki-library-lule-js-7f547208d11a08bb61fa.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Book = ({ book }) => {\n  return (\n    <li key={book.title} className=\"book-item\">\n      <section className=\"image\">\n        <Link to={book.link} itemProp=\"url\">\n          <img src={book.image} alt={book.title} />\n        </Link>\n      </section>\n      <section>\n        <h4>{book.title}</h4>\n        <span>\n          De{\" \"}\n          <Link to={book.author.link} itemProp=\"url\">\n            {book.author.name}\n          </Link>\n        </span>\n        <div>\n          <span>Lecturas:</span>\n          <ul>\n            {book.readings.map(r => {\n              if (r.end_date && r.end_date !== \"\") {\n                return (\n                  <li key={r.start_date}>\n                    <span>\n                      Del <time>{r.start_date}</time> al{\" \"}\n                      <time>{r.end_date}</time>\n                    </span>\n                  </li>\n                )\n              } else {\n                return (\n                  <li key={r.start_date}>\n                    <span>\n                      Empezado el <time>{r.start_date}</time>\n                    </span>\n                  </li>\n                )\n              }\n            })}\n          </ul>\n        </div>\n      </section>\n    </li>\n  )\n}\n\nexport default Book\n","import React from \"react\"\n\nimport Book from \"./book\"\n\nconst Books = ({ readed, reading }) => {\n  const title = \"book-list-container\"\n  return (\n    <div key={title} className={title}>\n      {reading.length > 0 && (\n        <>\n          <h2 className=\"text-shadow\">Leyendo</h2>\n          <ol className=\"book-list\">\n            {reading.map(b => (\n              <Book book={b} />\n            ))}\n          </ol>\n        </>\n      )}\n      <h2 className=\"text-shadow\">Le√≠dos</h2>\n      <ol className=\"book-list\">\n        {readed.map(b => (\n          <Book book={b} />\n        ))}\n      </ol>\n    </div>\n  )\n}\n\nexport default Books\n","import React, { useState } from \"react\"\nimport Select from \"react-select\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Books from \"./books\"\nimport BackButton from \"./back-button\"\n\nconst FILTER = {\n  year: \"year\",\n  title: \"title\",\n  author: \"author\",\n  genre: \"genre\",\n}\nconst Library = ({ location, library }) => {\n  const readingBooks = []\n  const readedBooks = []\n\n  const sortedBooks = library.books.sort(\n    (a, b) =>\n      new Date(b.readings[0].end_date) - new Date(a.readings[0].end_date)\n  )\n\n  sortedBooks.forEach(b => {\n    if (b.readings[0].end_date) {\n      readedBooks.push(b)\n    } else {\n      readingBooks.push(b)\n    }\n  })\n\n  const lastReading = sortedBooks[sortedBooks.length - 1].readings[0]\n  const lastYear = lastReading.end_date\n    ? new Date(lastReading.end_date).getFullYear()\n    : new Date(lastReading.start_date).getFullYear()\n  const now = new Date()\n\n  const selectYears = Array.from(\n    { length: now.getFullYear() - lastYear + 1 },\n    (_, i) => {\n      const y = now.getFullYear() - i\n      return { value: y, label: y }\n    }\n  )\n\n  const title = library.name\n\n  const [books, updateBooks] = useState(\n    readedBooks.filter(b => {\n      const lastReading = b.readings[0]\n      const year = lastReading.end_date\n        ? new Date(lastReading.end_date).getFullYear()\n        : new Date(lastReading.start_date).getFullYear()\n      return year === now.getFullYear()\n    })\n  )\n\n  const [year, selectYear] = useState(selectYears[0])\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{title}</h1>\n\n      <div className=\"select-year-container\">\n        <BackButton location={location} />\n        <div className=\"select-year\">\n          {selectYears.length > 1 && (\n            <Select\n              value={year}\n              onChange={y => {\n                selectYear(y)\n                updateBooks(\n                  filterBooks({\n                    books: readedBooks,\n                    filters: { year: y.value + \"\" },\n                  })\n                )\n              }}\n              options={selectYears}\n              theme={theme => ({\n                ...theme,\n                borderRadius: \"var(--radius-1)\",\n                colors: {\n                  ...theme.colors,\n                  primary25: \"var(--color-folders)\",\n                  primary: \"var(--color-text)\",\n                },\n              })}\n            />\n          )}\n        </div>\n      </div>\n\n      <Books readed={books} reading={readingBooks} />\n    </Layout>\n  )\n}\n\nconst filterBooks = ({ books, filters }) =>\n  books.filter(b => {\n    for (let k in filters) {\n      if (k === FILTER.year) {\n        for (let r of b.readings) {\n          if (\n            new Date(r.end_date).getFullYear() ===\n            new Date(filters[k]).getFullYear()\n          ) {\n            return true\n          }\n        }\n      } else if (k === FILTER.author) {\n        if (filters[k].includes(b[k]?.name)) {\n          return true\n        }\n      } else {\n        return filters[k].includes(b[k])\n      }\n    }\n\n    return false\n  })\n\nexport default Library\n","import React from \"react\"\n\nimport Library from \"../../../components/library\"\nimport library from \"../../../../content/wiki/library/library_lule.json\"\n\nconst LibraryCharlie = ({ location }) => {\n  return <Library location={location} library={library} />\n}\n\nexport default LibraryCharlie\n"],"sourceRoot":""}