{"version":3,"sources":["webpack:///./src/pages/wiki/lists.js","webpack:///./src/components/post-list.js","webpack:///./src/components/back-button.js"],"names":["Lists","data","location","prevTitle","title","path","className","posts","allMarkdownRemark","nodes","PostList","withAuthor","withoutDate","map","tab","frontmatter","fields","slug","key","dateTime","date","author","to","itemProp","state","prevPath","pathname","BackButton","id"],"mappings":"8FAAA,gFA0BeA,UAlBD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAA0B,EAAhBC,UAG/B,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUE,MAHhB,SAIV,kBAAC,IAAD,CAAKA,MAJK,UAKV,4BALU,SAMV,kBAAC,IAAD,CAAYF,SAAUA,EAAUG,KAAK,QAAQD,MAAM,SACnD,0BAAME,UAAU,aAAhB,SACA,kBAAC,IAAD,CACEC,MAAON,EAAKO,kBAAkBC,MAC9BP,SAAUA,EACVC,UAXQ,a,kCCThB,qCAiCeO,IA9BE,SAAC,GAA6D,IAA3DR,EAA0D,EAA1DA,SAAUK,EAAgD,EAAhDA,MAAOI,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAaT,EAAgB,EAAhBA,UAC5D,OACE,wBAAIG,UAAU,YACXC,EAAMM,KAAI,SAAAC,GACT,IAAMV,EAAQU,EAAIC,YAAYX,OAASU,EAAIE,OAAOC,KAElD,OACE,wBAAIC,IAAKJ,EAAIE,OAAOC,KAAMX,UAAU,kBAClC,yBAAKA,UAAU,SACXM,GACA,0BAAMO,SAAUL,EAAIC,YAAYK,MAC7BN,EAAIC,YAAYK,MAGpBT,GAAc,8BAAOG,EAAIC,YAAYM,SAExC,kBAAC,OAAD,CACEC,GAAIR,EAAIE,OAAOC,KACfM,SAAS,MACTC,MAAO,CAAEC,SAAUvB,EAASwB,SAAUvB,cAEtC,8BAAOC,IACD,W,kCCzBpB,qCAqBeuB,IAlBI,SAAC,GAA+B,IACtC,EAIC,EALQzB,EAA4B,EAA5BA,SAAUG,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,MAC/BC,IACHA,EAAI,UAAGH,EAASsB,aAAZ,aAAG,EAAgBC,UAGpBrB,IACHA,EAAK,UAAGF,EAASsB,aAAZ,aAAG,EAAgBrB,WAG1B,OAAOE,GAAQD,EACb,kBAAC,OAAD,CAAMwB,GAAG,UAAUN,GAAIjB,EAAMkB,SAAS,OACpC,mCADF,IACyBnB,GAGzB","file":"component---src-pages-wiki-lists-js-521ce5bb4fc720e3c340.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport PostList from \"../../components/post-list\"\nimport BackButton from \"../../components/back-button\"\n\nconst Lists = ({ data, location, prevTitle }) => {\n  const title = \"Lists\"\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{title}</h1>\n      <BackButton location={location} path=\"/wiki\" title=\"Wiki\" />\n      <span className=\"sub-title\">Lists</span>\n      <PostList\n        posts={data.allMarkdownRemark.nodes}\n        location={location}\n        prevTitle={title}\n      />\n    </Layout>\n  )\n}\n\nexport default Lists\n\nexport const lists = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___title], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } }\n        fileAbsolutePath: { regex: \"/lists/\" }\n      }\n      limit: 5\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostList = ({ location, posts, withAuthor, withoutDate, prevTitle }) => {\n  return (\n    <ol className=\"no-style\">\n      {posts.map(tab => {\n        const title = tab.frontmatter.title || tab.fields.slug\n\n        return (\n          <li key={tab.fields.slug} className=\"post-list-item\">\n            <div className=\"meta\">\n              {!withoutDate && (\n                <time dateTime={tab.frontmatter.date}>\n                  {tab.frontmatter.date}\n                </time>\n              )}\n              {withAuthor && <span>{tab.frontmatter.author}</span>}\n            </div>\n            <Link\n              to={tab.fields.slug}\n              itemProp=\"url\"\n              state={{ prevPath: location.pathname, prevTitle }}\n            >\n              <span>{title}</span>\n            </Link>{\" \"}\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst BackButton = ({ location, path, title }) => {\n  if (!path) {\n    path = location.state?.prevPath\n  }\n\n  if (!title) {\n    title = location.state?.prevTitle\n  }\n\n  return path && title ? (\n    <Link id=\"go-back\" to={path} itemProp=\"url\">\n      <span>&#x2190;</span> {title}\n    </Link>\n  ) : (\n    <p></p>\n  )\n}\n\nexport default BackButton\n"],"sourceRoot":""}