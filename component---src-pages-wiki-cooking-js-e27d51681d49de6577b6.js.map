{"version":3,"sources":["webpack:///./src/components/folders.js","webpack:///./src/pages/wiki/cooking.js","webpack:///./src/components/recipe.js","webpack:///./src/components/recipes.js","webpack:///./constants.js"],"names":["Folders","folders","location","title","className","map","f","key","name","to","path","itemProp","state","prevPath","pathname","prevTitle","FILTER","isFiltering","filters","ingredients","length","author","selectTheme","theme","borderRadius","colors","primary25","primary","getIngredientSelect","recipes","r","frontmatter","i","getSelectOptions","getAuthorSelect","authors","obj","result","k","push","value","label","sort","a","b","filterRecipes","filter","every","includes","Cooking","data","constants","RECIPE_BASE_PATH","allRecipes","allMarkdownRemark","nodes","useState","handleRecipes","handleFilters","ingredientSelect","authorSelect","RECIPE_BASES","folder","RECIPE_BREAKFASTS","RECIPE_STARTERS","RECIPE_SALADS","RECIPE_SOUPS","RECIPE_MAIN_DISHES","RECIPE_SAUCES","RECIPE_BREADS","RECIPE_DESSERTS","RECIPE_OTHERS","isClearable","placeholder","options","onChange","v","action","closeMenuOnSelect","isMulti","containerTitle","Recipe","recipe","fields","img","childImageSharp","fluid","src","image","loaded","handleImgLoaded","slug","onLoad","alt","style","display","undefined","time","portion","Recipes","exports","LIBRARY_BASE_PATH","LIBRARY_CHARLIE","LIBRARY_LULE"],"mappings":"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","file":"component---src-pages-wiki-cooking-js-e27d51681d49de6577b6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Folders = ({ folders, location, title }) => {\n  if (!folders) {\n    folders = []\n  }\n\n  return (\n    <ol className=\"folder-list\">\n      {folders.map(f => {\n        return (\n          <li key={f.name}>\n            <Link\n              key={f.name}\n              to={f.path}\n              itemProp=\"url\"\n              state={{ prevPath: location.pathname, prevTitle: title }}\n            >\n              <span>{f.name}</span>\n            </Link>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default Folders\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Select from \"react-select\"\n\nimport { constants } from \"../../../constants\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Folders from \"../../components/folders\"\nimport Recipes from \"../../components/recipes\"\nimport Filters from \"../../components/filters\"\n\nconst FILTER = {\n  ingredients: \"ingredients\",\n  author: \"author\",\n}\n\nconst Cooking = ({ data, location }) => {\n  const title = \"Recetas\"\n  const path = constants.RECIPE_BASE_PATH\n  const allRecipes = data.allMarkdownRemark.nodes\n\n  const [recipes, handleRecipes] = useState(allRecipes)\n  const [filters, handleFilters] = useState({})\n\n  const ingredientSelect = getIngredientSelect(allRecipes)\n  const authorSelect = getAuthorSelect(allRecipes)\n\n  const folders = [\n    {\n      name: constants.RECIPE_BASES.title,\n      path: `${path}/${constants.RECIPE_BASES.folder}`,\n    },\n    {\n      name: constants.RECIPE_BREAKFASTS.title,\n      path: `${path}/${constants.RECIPE_BREAKFASTS.folder}`,\n    },\n    {\n      name: constants.RECIPE_STARTERS.title,\n      path: `${path}/${constants.RECIPE_STARTERS.folder}`,\n    },\n    {\n      name: constants.RECIPE_SALADS.title,\n      path: `${path}/${constants.RECIPE_SALADS.folder}`,\n    },\n    {\n      name: constants.RECIPE_SOUPS.title,\n      path: `${path}/${constants.RECIPE_SOUPS.folder}`,\n    },\n    {\n      name: constants.RECIPE_MAIN_DISHES.title,\n      path: `${path}/${constants.RECIPE_MAIN_DISHES.folder}`,\n    },\n    {\n      name: constants.RECIPE_SAUCES.title,\n      path: `${path}/${constants.RECIPE_SAUCES.folder}`,\n    },\n    {\n      name: constants.RECIPE_BREADS.title,\n      path: `${path}/${constants.RECIPE_BREADS.folder}`,\n    },\n    {\n      name: constants.RECIPE_DESSERTS.title,\n      path: `${path}/${constants.RECIPE_DESSERTS.folder}`,\n    },\n    {\n      name: constants.RECIPE_OTHERS.title,\n      path: `${path}/${constants.RECIPE_OTHERS.folder}`,\n    },\n  ]\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{title}</h1>\n\n      <Filters location={location} title=\"Wiki\" path=\"/wiki\">\n        <div className=\"select select-author\">\n          {filters.author && <span className=\"filter-name\">Autor:</span>}\n          <Select\n            isClearable\n            placeholder=\"Autor\"\n            options={authorSelect}\n            onChange={(v, { action }) => {\n              const f = { ...filters }\n              let r = allRecipes\n              if (action === \"select-option\") {\n                f.author = v.value\n                r = recipes\n              } else {\n                delete f[FILTER.author]\n              }\n\n              handleFilters(f)\n              handleRecipes(\n                filterRecipes({\n                  recipes: r,\n                  filters: f,\n                })\n              )\n            }}\n            theme={selectTheme}\n          />\n        </div>\n\n        <div className=\"select select-ingredients\">\n          {filters.ingredients && filters.ingredients.length > 0 && (\n            <span className=\"filter-name\">Ingredientes:</span>\n          )}\n          <Select\n            closeMenuOnSelect={false}\n            isMulti\n            placeholder=\"Ingredientes\"\n            options={ingredientSelect}\n            onChange={(v, { action }) => {\n              const f = { ...filters, ingredients: v.map(i => i.value) }\n\n              handleFilters(f)\n              handleRecipes(\n                filterRecipes({\n                  recipes: action === \"select-option\" ? recipes : allRecipes,\n                  filters: f,\n                })\n              )\n            }}\n            theme={selectTheme}\n          />\n        </div>\n      </Filters>\n\n      {!isFiltering(filters) && (\n        <Folders folders={folders} location={location} title={title} />\n      )}\n      {isFiltering(filters) && (\n        <Recipes recipes={recipes} location={location} containerTitle={title} />\n      )}\n    </Layout>\n  )\n}\n\nconst isFiltering = filters =>\n  (filters.ingredients && filters.ingredients.length > 0) || filters.author\n\nconst selectTheme = theme => ({\n  ...theme,\n  borderRadius: \"var(--radius-1)\",\n  colors: {\n    ...theme.colors,\n    primary25: \"var(--color-folders)\",\n    primary: \"var(--color-text-light)\",\n  },\n})\n\nconst getIngredientSelect = recipes => {\n  const ingredients = {}\n\n  for (let r of recipes) {\n    if (r.frontmatter.ingredients) {\n      for (let i of r.frontmatter.ingredients) {\n        if (!ingredients[i]) {\n          ingredients[i] = i\n        }\n      }\n    }\n  }\n\n  return getSelectOptions(ingredients)\n}\n\nconst getAuthorSelect = recipes => {\n  const authors = {}\n\n  for (let r of recipes) {\n    const author = r.frontmatter.author\n    if (author && !authors[author]) {\n      authors[author] = author\n    }\n  }\n\n  return getSelectOptions(authors)\n}\n\nconst getSelectOptions = obj => {\n  const result = []\n\n  for (let k in obj) {\n    result.push({ value: k, label: k })\n  }\n\n  return result.sort((a, b) => a.value > b.value)\n}\n\nconst filterRecipes = ({ recipes, filters }) =>\n  recipes.filter(r => {\n    for (let k in filters) {\n      if (k === FILTER.ingredients) {\n        if (!filters[k].every(i => r.frontmatter.ingredients?.includes(i))) {\n          return false\n        }\n      } else if (k === FILTER.author) {\n        if (filters[k] !== r.frontmatter.author) {\n          return false\n        }\n      }\n    }\n\n    return true\n  })\n\nexport default Cooking\n\nexport const recipeListQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } }\n        fileAbsolutePath: { regex: \"/cooking/\" }\n      }\n      limit: 1000\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          author\n          image\n          img {\n            childImageSharp {\n              fluid(maxWidth: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          time\n          portion\n          ingredients\n        }\n      }\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Recipe = ({ recipe, location, containerTitle }) => {\n  const { frontmatter, fields } = recipe\n  const img = frontmatter.img\n    ? frontmatter.img.childImageSharp.fluid.src\n    : frontmatter.image\n  const [loaded, handleImgLoaded] = useState(false)\n\n  return (\n    <li key={frontmatter.title}>\n      <Link\n        key={frontmatter.title}\n        to={fields.slug}\n        itemProp=\"url\"\n        state={{ prevPath: location.pathname, prevTitle: containerTitle }}\n      >\n        <section className=\"image\">\n          {!loaded ? <div className=\"skeleton\"></div> : null}\n          <img\n            src={img}\n            onLoad={() => handleImgLoaded(true)}\n            alt={frontmatter.title}\n            style={{\n              display: !loaded ? \"none\" : undefined,\n            }}\n          />\n        </section>\n        <section className=\"recipe-spec-container\">\n          <div>\n            <h4>{frontmatter.title}</h4>\n            <small className=\"author\">{frontmatter.author}</small>\n          </div>\n          <div>\n            <div className=\"separator-line\"></div>\n            <div className=\"recipe-spec\">\n              <div className=\"recipe-spec-time\">\n                <small className=\"spec-key\">Tiempo</small>\n                <small>{frontmatter.time}</small>\n              </div>\n              <div className=\"recipe-spec-portion\">\n                <small className=\"spec-key\">Porción</small>\n                <small>{frontmatter.portion || \"-\"}</small>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Link>\n    </li>\n  )\n}\n\nexport default Recipe\n","import React from \"react\"\n\nimport Recipe from \"./recipe\"\n\nconst Recipes = ({ recipes, location, containerTitle }) => {\n  return (\n    <div className=\"recipe-list-container\">\n      <ul className=\"recipe-list\">\n        {recipes.map(r => (\n          <Recipe\n            key={r.frontmatter.title}\n            recipe={r}\n            location={location}\n            containerTitle={containerTitle}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Recipes\n","exports.constants = {\n  RECIPE_BASE_PATH: \"/wiki/cooking\",\n  RECIPE_BREADS: {\n    folder: \"breads\",\n    title: \"Panes\",\n  },\n  RECIPE_DESSERTS: {\n    folder: \"desserts\",\n    title: \"Postres\",\n  },\n  RECIPE_MAIN_DISHES: {\n    folder: \"main_dishes\",\n    title: \"Principales\",\n  },\n  RECIPE_OTHERS: {\n    folder: \"others\",\n    title: \"Otras\",\n  },\n  RECIPE_SALADS: {\n    folder: \"salads\",\n    title: \"Ensaladas\",\n  },\n  RECIPE_SAUCES: {\n    folder: \"sauces\",\n    title: \"Salsas\",\n  },\n  RECIPE_SOUPS: {\n    folder: \"soups\",\n    title: \"Cremas y sopas\",\n  },\n  RECIPE_STARTERS: {\n    folder: \"starters\",\n    title: \"Entrantes\",\n  },\n  RECIPE_BASES: {\n    folder: \"bases\",\n    title: \"Bases\",\n  },\n  RECIPE_BREAKFASTS: {\n    folder: \"breakfasts\",\n    title: \"Desayunos\",\n  },\n  LIBRARY_BASE_PATH: \"/wiki/library\",\n  LIBRARY_CHARLIE: {\n    folder: \"charlie\",\n    title: \"Charlie\",\n  },\n  LIBRARY_LULE: {\n    folder: \"lule\",\n    title: \"Lule\",\n  },\n}\n"],"sourceRoot":""}