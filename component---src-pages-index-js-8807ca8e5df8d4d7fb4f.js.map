{"version":3,"sources":["webpack:///./src/components/post-list.js","webpack:///./src/pages/index.js"],"names":["PostList","location","posts","withAuthor","withoutDate","prevTitle","className","map","tab","title","frontmatter","fields","slug","key","dateTime","date","author","to","itemProp","state","prevPath","pathname","BlogIndex","data","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","length"],"mappings":"2FAAA,qCAiCeA,IA9BE,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC5D,OACE,wBAAIC,UAAU,YACXJ,EAAMK,KAAI,SAAAC,GACT,IAAMC,EAAQD,EAAIE,YAAYD,OAASD,EAAIG,OAAOC,KAElD,OACE,wBAAIC,IAAKL,EAAIG,OAAOC,KAAMN,UAAU,kBAClC,yBAAKA,UAAU,SACXF,GACA,0BAAMU,SAAUN,EAAIE,YAAYK,MAC7BP,EAAIE,YAAYK,MAGpBZ,GAAc,8BAAOK,EAAIE,YAAYM,SAExC,kBAAC,OAAD,CACEC,GAAIT,EAAIG,OAAOC,KACfM,SAAS,MACTC,MAAO,CAAEC,SAAUnB,EAASoB,SAAUhB,cAEtC,8BAAOI,IACD,W,kCCzBpB,oEAmCea,UA5BG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMtB,EAAe,EAAfA,SACnBuB,GAAY,UAAAD,EAAKE,KAAKC,oBAAV,eAAwBjB,QAAxB,QACZP,EAAQqB,EAAKI,kBAAkBC,MAErC,OAAqB,IAAjB1B,EAAM2B,OAEN,kBAAC,IAAD,CAAQ5B,SAAUA,EAAUQ,MAAOe,GACjC,kBAAC,IAAD,CAAKf,MAAM,aACX,yLAUJ,kBAAC,IAAD,CAAQR,SAAUA,EAAUQ,MAAOe,GACjC,kBAAC,IAAD,CAAKf,MAAM,aAEX,0BAAMH,UAAU,aAAhB,YAEA,kBAAC,IAAD,CAAUJ,MAAOA,EAAOD,SAAUA,EAAUI,UAAU","file":"component---src-pages-index-js-8807ca8e5df8d4d7fb4f.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostList = ({ location, posts, withAuthor, withoutDate, prevTitle }) => {\n  return (\n    <ol className=\"no-style\">\n      {posts.map(tab => {\n        const title = tab.frontmatter.title || tab.fields.slug\n\n        return (\n          <li key={tab.fields.slug} className=\"post-list-item\">\n            <div className=\"meta\">\n              {!withoutDate && (\n                <time dateTime={tab.frontmatter.date}>\n                  {tab.frontmatter.date}\n                </time>\n              )}\n              {withAuthor && <span>{tab.frontmatter.author}</span>}\n            </div>\n            <Link\n              to={tab.fields.slug}\n              itemProp=\"url\"\n              state={{ prevPath: location.pathname, prevTitle }}\n            >\n              <span>{title}</span>\n            </Link>{\" \"}\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostList from \"../components/post-list\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Writings\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Writings\" />\n\n      <span className=\"sub-title\">Entradas</span>\n\n      <PostList posts={posts} location={location} prevTitle=\"Home\" />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: 5\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}