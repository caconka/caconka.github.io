{"version":3,"file":"component---src-pages-wiki-climbing-js-0ffd2e43464b0f030eb6.js","mappings":"4IAqBA,IAlBmB,IAAgC,IAA/B,SAAEA,EAAQ,KAAEC,EAAI,MAAEC,GAAO,EAC/B,IAAD,EAIC,EAJPD,IACHA,EAAqB,QAAjB,EAAGD,EAASG,aAAK,aAAd,EAAgBC,UAGpBF,IACHA,EAAsB,QAAjB,EAAGF,EAASG,aAAK,aAAd,EAAgBE,WAG1B,OAAOJ,GAAQC,EACb,gBAAC,EAAAI,KAAI,CAACC,GAAG,UAAUC,GAAIP,EAAMQ,SAAS,OACpC,iCAAqB,IAAEP,GAGzB,yBACD,C,8CCeH,IA9BiB,IAA8D,IAA7D,SAAEF,EAAQ,MAAEU,EAAK,WAAEC,EAAU,YAAEC,EAAW,UAAEP,GAAW,EACvE,OACE,sBAAIQ,UAAU,YACXH,EAAMI,KAAIC,IACT,MAAMb,EAAQa,EAAIC,YAAYd,OAASa,EAAIE,OAAOC,KAElD,OACE,sBAAIC,IAAKJ,EAAIE,OAAOC,KAAML,UAAU,kBAClC,uBAAKA,UAAU,SACXD,GACA,wBAAMQ,SAAUL,EAAIC,YAAYK,MAC7BN,EAAIC,YAAYK,MAGpBV,GAAc,4BAAOI,EAAIC,YAAYM,SAExC,gBAAC,EAAAhB,KAAI,CACHE,GAAIO,EAAIE,OAAOC,KACfT,SAAS,MACTN,MAAO,CAAEC,SAAUJ,EAASuB,SAAUlB,cAEtC,4BAAOH,IACD,IACL,IAGN,C,mFCJT,UAjBiB,IAAoC,IAAnC,KAAEsB,EAAI,SAAExB,EAAQ,UAAEK,GAAW,EAC7C,MAAMH,EAAQ,WAEd,OACE,gBAAC,IAAM,CAACF,SAAUA,EAAUE,MAAOA,GACjC,gBAAC,IAAG,CAACA,MAAOA,IACZ,0BAAKA,GACL,gBAAC,IAAU,CAACF,SAAUA,EAAUC,KAAK,QAAQC,MAAM,SACnD,gBAAC,IAAQ,CACPQ,MAAOc,EAAKC,kBAAkBC,MAC9B1B,SAAUA,EACVK,UAAWH,IAEN,C","sources":["webpack://digital-garden/./src/components/back-button.js","webpack://digital-garden/./src/components/post-list.js","webpack://digital-garden/./src/pages/wiki/climbing.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst BackButton = ({ location, path, title }) => {\n  if (!path) {\n    path = location.state?.prevPath\n  }\n\n  if (!title) {\n    title = location.state?.prevTitle\n  }\n\n  return path && title ? (\n    <Link id=\"go-back\" to={path} itemProp=\"url\">\n      <span>&#x2190;</span> {title}\n    </Link>\n  ) : (\n    <p></p>\n  )\n}\n\nexport default BackButton\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostList = ({ location, posts, withAuthor, withoutDate, prevTitle }) => {\n  return (\n    <ol className=\"no-style\">\n      {posts.map(tab => {\n        const title = tab.frontmatter.title || tab.fields.slug\n\n        return (\n          <li key={tab.fields.slug} className=\"post-list-item\">\n            <div className=\"meta\">\n              {!withoutDate && (\n                <time dateTime={tab.frontmatter.date}>\n                  {tab.frontmatter.date}\n                </time>\n              )}\n              {withAuthor && <span>{tab.frontmatter.author}</span>}\n            </div>\n            <Link\n              to={tab.fields.slug}\n              itemProp=\"url\"\n              state={{ prevPath: location.pathname, prevTitle }}\n            >\n              <span>{title}</span>\n            </Link>{\" \"}\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport PostList from \"../../components/post-list\"\nimport BackButton from \"../../components/back-button\"\n\nconst Climbing = ({ data, location, prevTitle }) => {\n  const title = \"Climbing\"\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{title}</h1>\n      <BackButton location={location} path=\"/wiki\" title=\"Wiki\" />\n      <PostList\n        posts={data.allMarkdownRemark.nodes}\n        location={location}\n        prevTitle={title}\n      />\n    </Layout>\n  )\n}\n\nexport default Climbing\n\nexport const climbing = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { title: DESC } }\n      filter: {\n        frontmatter: { draft: { ne: true } }\n        fileAbsolutePath: { regex: \"/climbing/\" }\n      }\n      limit: 5\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n        }\n      }\n    }\n  }\n`\n"],"names":["location","path","title","state","prevPath","prevTitle","Link","id","to","itemProp","posts","withAuthor","withoutDate","className","map","tab","frontmatter","fields","slug","key","dateTime","date","author","pathname","data","allMarkdownRemark","nodes"],"sourceRoot":""}